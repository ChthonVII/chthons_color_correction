shaders = "15"

# since bsnes's mode7 supersampling doesn't work at 1x, use a higher scale factor with supersampling in the core options, then downscale to accomplish supersampling at 1x
# (bsnes-hd's supersampling works, but it has other bugs, and undesirable overscan behavior)
# make sure the dimensions here match what the core is outputting at 1x.
shader0 = ../interpolation/shaders/bicubic.slang
#shader0 = ../edge-smoothing/xbr/shaders/super-xbr/custom-jinc2-sharper.slang
#shader0 = shaders/area-average-integer-downscale.slang
scale_type_x0 = absolute
scale_x0 = "256.000000"
scale_type_y0 = absolute
scale_y0 = "224.000000"
filter_linear0 = true

# This LUT encompasses color correction circuit emulation > bt1886appdx1 EotF function > gamut conversion w/ chromatic adapation, state-of-the-art gamut compression
# Input is TV-gamma-space RGB; output is linearRGB.
# From here forward *ALL* framebuffers need to be float. Otherwise dark blues will go fucky.
shader1 = shaders/trilinearLUT-gamma.slang
scale_type1 = source
scale1 = "1.000000"
filter_linear1 = false
float_framebuffer1 = true
wrap_mode1 = "clamp_to_border"
mipmap_input1 = "false"
alias1 = XbrSource

# Perform Super-XBR upscaling.
# This can be replaced with upscaling of your choice.
# You can use XBR/ScaleFX/nnedi3/etc. for smooth edges, or bilinear/lanzcos/jinc/etc. for something close to original pixel, or even nearest neighbor if you want.
# Just make sure the scanline pass is getting input that's final x resolution and 10x original y resolution.

# Super-XBR
shader2 = "../edge-smoothing/xbr/shaders/super-xbr/super-xbr-pass0.slang"
filter_linear2 = false
wrap_mode2 = clamp_to_edge
float_framebuffer2 =  "true"
scale_type2 = "source"
scale2 = "1.000000"

shader3 = "../edge-smoothing/xbr/shaders/super-xbr/super-xbr-pass1.slang"
filter_linear3 = false
wrap_mode3 = clamp_to_edge
float_framebuffer3 =  "true"
scale_type3 = "source"
scale3 = "2.000000"

shader4 = "../edge-smoothing/xbr/shaders/super-xbr/super-xbr-pass2.slang"
filter_linear4 = false
wrap_mode4 = clamp_to_edge
float_framebuffer4 =  "true"
scale_type4 = "source"
scale4 = "1.000000"

# Scale to final x resolution and 10x original y resolution.
# X is scaled to (eventually) achieve 4:3 aspect ratio.
# If full height of 16:9 screen is used, X should be 75% of viewport.
# Y needs to be 10x original for the scanline filter to work properly
# Earlier Super-XBR steps did 2x, so need 5x more Y scale
shader5 = "../edge-smoothing/xbr/shaders/super-xbr/custom-jinc2-sharper.slang"
filter_linear5 = false
wrap_mode5 = clamp_to_edge
float_framebuffer5 =  "true"
scale_type_x5 = "viewport"
scale_x5 = "0.750000"
scale_type_y5 = "source"
scale_y5 = "5.000000"

# Remove some blur
# Possibly a bit wrong to do this at vertically stretched resolution, but doesn't seem to have noticeable ill effects
# (The alternative requires an extra scaling step.)
shader6 = ../deblur/shaders/deblur.slang
filter_linear6 = true
scale_type6 = "source"
scale6 = 1.0
float_framebuffer6 =  "true"

# Apply scanlines
shader7 = "shaders/scanline-rework-erfv.slang"
filter_linear7 = "false"
wrap_mode7 = "clamp_to_edge"
mipmap_input7 = "false"
float_framebuffer7 = "true"
scale_type7 = "source"
scale7 = "1.000000"

# Downscale Y to fit viewport, achieving 4:3 aspect ratio.
#shader8 =  "../interpolation/shaders/bicubic-y.slang"
shader8 =  "../interpolation/shaders/spline36-y.slang"
filter_linear8 = "true"
wrap_mode8 = "clamp_to_border"
mipmap_input8 = "false"
float_framebuffer8 = "true"
scale_type_x8 = "source"
scale_x8 = "1.000000"
scale_type_y8 = "viewport"
scale_y8 = "1.000000"

# Apply aperature grille effect
shader9 =   "shaders/aapg-rework2.slang"
filter_linear9 =   "false"
wrap_mode9 =   "clamp_to_edge"
mipmap_input9 =   "false"
float_framebuffer9 =   "true"
scale_type9 =   "source"
scale9 =   "1.000000"
alias9 = NoBlurSource

# Make a blurred copy for applying halation/blur
# Not super happy with this implementation. Might try replacing it.
#shader10 = "shaders/blur_horiz.slang"
shader10 = "../blurs/shaders/gaussian_blur_filtering/gaussian_horizontal.slang"
filter_linear10 = "false"
float_framebuffer10 = "true"
scale_type10 = "source"
scale10 = "1.000000"

#shader11 = "shaders/blur_vert.slang"
shader11 = "../blurs/shaders/gaussian_blur_filtering/gaussian_vertical.slang"
filter_linear11 = "false"
float_framebuffer11 = "true"
scale_type11 = "source"
scale11 = "1.000000"

# Do halation/blur
shader12 = "shaders/halationdiffusion.slang"
filter_linear12 = "false"
float_framebuffer12 = "true"
scale_type12 = "source"
scale12 = "1.000000"

# Letterbox the result
# This can be replaced with a "fancy borders" shader
shader13 = shaders/letterbox.slang
scale_type13 = viewport
scale13 = "1.000000"
filter_linear13 = "false"
float_framebuffer13 = "true"

# Back to sRGB gamma space
shader14 = shaders/delinearizeSRGB.slang
scale_type14 = source
scale14 = "1.000000"
filter_linear14 = "false"


PHOSPHOR_LAYOUT = "4.000000"


MODE = "1.000000"
JINC2_SINC = "0.920000"
JINC2_AR_STRENGTH = "0.500000"

textures = "SamplerLUT"
# Japan
SamplerLUT = shaders/CXA1464AS_default.png
#SamplerLUT = shaders/CXA1464AS_RGB2sRGBnew.png
# US
#SamplerLUT = shaders/CXA1465AS_default.png
#SamplerLUT = shaders/CXA1465AS_RGB2sRGBnew.png
SamplerLUT_linear = false
